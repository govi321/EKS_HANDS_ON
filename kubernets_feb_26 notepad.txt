admin@DESKTOP-5SVNK8U MINGW64 ~/Desktop
$ ssh -i "sydneykey.pem" ubuntu@ec2-3-27-157-188.ap-southeast-2.compute.amazonaws.com
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-1008-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sat May  4 13:34:15 UTC 2024

  System load:  0.08              Processes:             107
  Usage of /:   39.5% of 6.71GB   Users logged in:       0
  Memory usage: 26%               IPv4 address for enX0: 172.31.4.241
  Swap usage:   0%

 * Ubuntu Pro delivers the most comprehensive open source security and
   compliance features.

   https://ubuntu.com/aws/pro

Expanded Security Maintenance for Applications is not enabled.

8 updates can be applied immediately.
8 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


Last login: Sat May  4 07:28:54 2024 from 45.112.30.51
ubuntu@ip-172-31-4-241:~$ sudo -i
root@ip-172-31-4-241:~# docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
root@ip-172-31-4-241:~# docker init
docker: 'init' is not a docker command.
See 'docker --help'
root@ip-172-31-4-241:~# docker pull nginx
Using default tag: latest
latest: Pulling from library/nginx
b0a0cf830b12: Pull complete
8ddb1e6cdf34: Pull complete
5252b206aac2: Pull complete
988b92d96970: Pull complete
7102627a7a6e: Pull complete
93295add984d: Pull complete
ebde0aa1d1aa: Pull complete
Digest: sha256:ed6d2c43c8fbcd3eaa44c9dab6d94cb346234476230dc1681227aa72d07181ee
Status: Downloaded newer image for nginx:latest
docker.io/library/nginx:latest

root@ip-172-31-4-241:~# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
nginx        latest    7383c266ef25   10 days ago   188MB

root@ip-172-31-4-241:~# docker tag nginx myapp:2.0

root@ip-172-31-4-241:~# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
myapp        2.0       7383c266ef25   10 days ago   188MB
nginx        latest    7383c266ef25   10 days ago   188MB

root@ip-172-31-4-241:~# kubectl  get nodes
NAME                                                 STATUS   ROLES    AGE    VERSION
ip-192-168-115-209.ap-southeast-2.compute.internal   Ready    <none>   6h8m   v1.29.3-eks-ae9a62a
root@ip-172-31-4-241:~# kubectl create deploy myapp --images myapp:2.0 --dry-run -o yaml > deployment.yaml
error: unknown flag: --images
See 'kubectl create deployment --help' for usage.


root@ip-172-31-4-241:~#
root@ip-172-31-4-241:~# kubectl create deploy myapp1 --images myapp:2.0 --dry-run -o yaml > deployment.yaml
error: unknown flag: --images
See 'kubectl create deployment --help' for usage.
root@ip-172-31-4-241:~# docker login
Log in with your Docker ID or email address to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com/ to create one.
You can log in with your password or a Personal Access Token (PAT). Using a limited-scope PAT grants better security and is required for organizations using SSO. Learn more at https://docs.docker.com/go/access-tokens/

Username: goverdhan1

Password:
Error: Password Required
root@ip-172-31-4-241:~# docker login
Log in with your Docker ID or email address to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com/ to create one.
You can log in with your password or a Personal Access Token (PAT). Using a limited-scope PAT grants better security and is required for organizations using SSO. Learn more at https://docs.docker.com/go/access-tokens/

Username: goverdhan1
Password:
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@ip-172-31-4-241:~# kubectl create deploy myapp1 --images myapp:2.0 --dry-run -o yaml > deployment.yaml
error: unknown flag: --images
See 'kubectl create deployment --help' for usage.
root@ip-172-31-4-241:~# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
myapp        2.0       7383c266ef25   10 days ago   188MB
nginx        latest    7383c266ef25   10 days ago   188MB
root@ip-172-31-4-241:~# docker push myapp
Using default tag: latest
The push refers to repository [docker.io/library/myapp]
tag does not exist: myapp:latest
root@ip-172-31-4-241:~# docker login
Authenticating with existing credentials...
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@ip-172-31-4-241:~# docker push myapp
Using default tag: latest
The push refers to repository [docker.io/library/myapp]
tag does not exist: myapp:latest
root@ip-172-31-4-241:~# docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
myapp        2.0       7383c266ef25   10 days ago   188MB
nginx        latest    7383c266ef25   10 days ago   188MB
root@ip-172-31-4-241:~# docker tag nginx goverdhan1/nginx:v1
root@ip-172-31-4-241:~# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
goverdhan1/nginx   v1        7383c266ef25   10 days ago   188MB
myapp              2.0       7383c266ef25   10 days ago   188MB
nginx              latest    7383c266ef25   10 days ago   188MB
root@ip-172-31-4-241:~# docker push goverdhan1/goverdhan1/nginx
Using default tag: latest
The push refers to repository [docker.io/goverdhan1/goverdhan1/nginx]
An image does not exist locally with the tag: goverdhan1/goverdhan1/nginx
root@ip-172-31-4-241:~# dokcker .io
Command 'dokcker' not found, did you mean:
  command 'docker' from snap docker (24.0.5)
  command 'docker' from deb docker.io (24.0.5-0ubuntu1)
  command 'docker' from deb podman-docker (4.7.2+ds1-2build1)
See 'snap info <snapname>' for additional versions.
root@ip-172-31-4-241:~# docker.io
docker.io: command not found
root@ip-172-31-4-241:~# docker .io
docker: '.io' is not a docker command.
See 'docker --help'


root@ip-172-31-4-241:~# docker push goverdhan1/nginxlatest:v1
The push refers to repository [docker.io/goverdhan1/nginxlatest]
An image does not exist locally with the tag: goverdhan1/nginxlatest

root@ip-172-31-4-241:~# docker push goverdhan1/nginxlatest
Using default tag: latest
The push refers to repository [docker.io/goverdhan1/nginxlatest]
An image does not exist locally with the tag: goverdhan1/nginxlatest

root@ip-172-31-4-241:~# docker images
REPOSITORY         TAG       IMAGE ID       CREATED       SIZE
goverdhan1/nginx   v1        7383c266ef25   10 days ago   188MB
myapp              2.0       7383c266ef25   10 days ago   188MB
nginx              latest    7383c266ef25   10 days ago   188MB

root@ip-172-31-4-241:~# docker push goverdhan1/nginx:v1
The push refers to repository [docker.io/goverdhan1/nginx]
9fd54926bcae: Mounted from library/nginx
175aa66db4cc: Mounted from library/nginx
e6380a7057a5: Mounted from library/nginx
1db2242fc1fa: Mounted from library/nginx
b09347a1aec6: Mounted from library/nginx
bbde741e108b: Mounted from library/nginx
52ec5a4316fa: Mounted from library/nginx
v1: digest: sha256:810ca58c5f0e8e3bc8b5414028cfd09322757c74b0384e601a98a1e8c8513707 size: 1778

take duplicate server

and apply the command call

watch -x kubectl get all


root@ip-172-31-4-241:~# kubectl create deploy myapp --image goverdhan1/nginx:v1 --dry-run -o yaml > deployment.yaml
W0504 14:06:16.823092    5096 helpers.go:703] --dry-run is deprecated and can be replaced with --dry-run=client.

Take the duplicate session 

watch -x kubectl get all



root@ip-172-31-4-241:~# ls
aws  awscliv2.zip  deployment.yaml  snap

root@ip-172-31-4-241:~# vi deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: myapp
  name: myapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: myapp
    spec:
      containers:
      - image: goverdhan1/nginx:v1
        name: nginx
        resources: {}
status: {}
:wq
save


root@ip-172-31-4-241:~# kubectl apply -f deployment.yaml
deployment.apps/myapp created


root@ip-172-31-4-241:~# kubectl expose deploy myapp --port 80 --type=LoadBalancer --dry-run -o yaml > service.yaml
W0504 14:21:17.544048    9624 helpers.go:703] --dry-run is deprecated and can be replaced with --dry-run=client.

root@ip-172-31-4-241:~# vi service.yaml

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: myapp
  name: myapp
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: myapp
  type: LoadBalancer
status:
  loadBalancer: {}
:wq
save


root@ip-172-31-4-241:~# kubectl apply -f service.yaml
service/myapp created

root@ip-172-31-4-241:~# vi deployment.yaml
root@ip-172-31-4-241:~# kubectl apply -f  deployment.yaml
deployment.apps/myapp configured
root@ip-172-31-4-241:~#

then delete the srvice 

kubectl delete service/myapp

 kubectl delete deployment.apps/myapp  
